#include"glut.h"
#include<stdio.h>
#include<stdlib.h>
//例子中的苍蝇
static GLubyte Mask[128] =
{
    0x00, 0x00, 0x00, 0x00,   //  这是最下面的一行 
    0x00, 0x00, 0x00, 0x00,
    0x03, 0x80, 0x01, 0xC0,   //  麻 
    0x06, 0xC0, 0x03, 0x60,   //  烦 
    0x04, 0x60, 0x06, 0x20,   //  的 
    0x04, 0x30, 0x0C, 0x20,   //  初 
    0x04, 0x18, 0x18, 0x20,   //  始 
    0x04, 0x0C, 0x30, 0x20,   //  化     0x04, 0x06, 0x60, 0x20,   //  ， 
    0x44, 0x03, 0xC0, 0x22,   //  不 
    0x44, 0x01, 0x80, 0x22,   //  建 
    0x44, 0x01, 0x80, 0x22,   //  议 
    0x44, 0x01, 0x80, 0x22,   //  使 
    0x44, 0x01, 0x80, 0x22,   //  用 
    0x44, 0x01, 0x80, 0x22,
    0x44, 0x01, 0x80, 0x22,
    0x66, 0x01, 0x80, 0x66,
    0x33, 0x01, 0x80, 0xCC,
    0x19, 0x81, 0x81, 0x98,
    0x0C, 0xC1, 0x83, 0x30,
    0x07, 0xE1, 0x87, 0xE0,
    0x03, 0x3F, 0xFC, 0xC0,
    0x03, 0x31, 0x8C, 0xC0,
    0x03, 0x3F, 0xFC, 0xC0,
    0x06, 0x64, 0x26, 0x60,
    0x0C, 0xCC, 0x33, 0x30,
    0x18, 0xCC, 0x33, 0x18,
    0x10, 0xC4, 0x23, 0x08,
    0x10, 0x63, 0xC6, 0x08,
    0x10, 0x30, 0x0C, 0x08,
    0x10, 0x18, 0x18, 0x08,
    0x10, 0x00, 0x00, 0x08   // 这是最上面的一行 
};
void myDisplay() {
	glClear(GL_COLOR_BUFFER_BIT);

	glPolygonStipple(Mask);
	glEnable(GL_POLYGON_STIPPLE);
	glBegin(GL_POLYGON);
	glVertex2d(-0.8, -0.8);
	glVertex2d(-0.8, 0.7);
	glVertex2d(0.7, 0.7);
    glVertex2d(0.7, -0.7);
	glEnd();
    
	glBegin(GL_POLYGON);
	glVertex2d(-0.1, -0.2);
	glVertex2d(-0.2, -0.1);
	glVertex2d(-0.3, -0.4);
	glEnd();
	glFlush();
}
const char* filename = "小雨头像.bmp";
void readFile() {
	glClear(GL_COLOR_BUFFER_BIT);
	FILE* file=fopen(filename,"rb");
	fseek(file,-128,SEEK_END);

	fread(Mask,128,1,file);
	
	
	glPolygonStipple(Mask);
	glEnable(GL_POLYGON_STIPPLE);
	glBegin(GL_POLYGON);
	glVertex2d(-0.8, -0.8);
	glVertex2d(-0.8, 0.7);
	glVertex2d(0.7, 0);
	glEnd();

	glBegin(GL_POLYGON);
	glVertex2d(0.3, 0.5);
	glVertex2d(0.8, 0.8);
	glVertex2d(0.5, 0.3);
	glEnd();
	glFlush();
}
int main(int  argc, char* argv[]) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);
	glutInitWindowPosition(100, 100);
	glutInitWindowSize(400, 400);
	glutCreateWindow("测试多边形镂空-OpenGL程序");
	glutDisplayFunc(&readFile);
	glutMainLoop();
	return 0;
}